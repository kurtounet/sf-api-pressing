{
  "openapi": "3.1.0",
  "info": {
    "title": "Platform API Pressing",
    "description": "",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/",
      "description": ""
    }
  ],
  "paths": {
    "/api/categories": {
      "get": {
        "operationId": "api_categories_get_collection",
        "tags": ["Category"],
        "responses": {
          "200": {
            "description": "Category collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category.jsonld-category.list.read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": ["string", "null"]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["hydra:member"]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Category resources.",
        "description": "Retrieves the collection of Category resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_categories_post",
        "tags": ["Category"],
        "responses": {
          "201": {
            "description": "Category resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Category.jsonld-category.list.read"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Category resource.",
        "description": "Creates a Category resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Category resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Category.jsonld-category.write"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/categories/{id}": {
      "get": {
        "operationId": "api_categories_id_get",
        "tags": ["Category"],
        "responses": {
          "200": {
            "description": "Category resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Category.jsonld-category.list.read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Category resource.",
        "description": "Retrieves a Category resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_categories_id_delete",
        "tags": ["Category"],
        "responses": {
          "204": {
            "description": "Category resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Category resource.",
        "description": "Removes the Category resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_categories_id_patch",
        "tags": ["Category"],
        "responses": {
          "200": {
            "description": "Category resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Category.jsonld-category.list.read"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Category resource.",
        "description": "Updates the Category resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Category resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Category-category.write"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/client/commandes": {
      "get": {
        "operationId": "app_get_commandes_client",
        "tags": ["Client"],
        "responses": {
          "200": {
            "description": "Client collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Client.jsonld-client.read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": ["string", "null"]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["hydra:member"]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Client resources.",
        "description": "Retrieves the collection of Client resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/api/clients": {
      "get": {
        "operationId": "api_clients_get_collection",
        "tags": ["Client"],
        "responses": {
          "200": {
            "description": "Client collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Client.jsonld-client.read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": ["string", "null"]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["hydra:member"]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Client resources.",
        "description": "Retrieves the collection of Client resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_clients_post",
        "tags": ["Client"],
        "responses": {
          "201": {
            "description": "Client resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Client.jsonld-client.read"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Client resource.",
        "description": "Creates a Client resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Client resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Client.jsonld-client.write"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/clients/{id}": {
      "get": {
        "operationId": "api_clients_id_get",
        "tags": ["Client"],
        "responses": {
          "200": {
            "description": "Client resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Client.jsonld-client.read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Client resource.",
        "description": "Retrieves a Client resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_clients_id_delete",
        "tags": ["Client"],
        "responses": {
          "204": {
            "description": "Client resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Client resource.",
        "description": "Removes the Client resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_clients_id_patch",
        "tags": ["Client"],
        "responses": {
          "200": {
            "description": "Client resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Client.jsonld-client.read"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Client resource.",
        "description": "Updates the Client resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Client resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Client-client.write"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/commandes": {
      "get": {
        "operationId": "api_commandes_get_collection",
        "tags": ["Commande"],
        "responses": {
          "200": {
            "description": "Commande collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Commande.jsonld-commande.read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": ["string", "null"]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["hydra:member"]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Commande resources.",
        "description": "Retrieves the collection of Commande resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_commandes_post",
        "tags": ["Commande"],
        "responses": {
          "201": {
            "description": "Commande resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Commande.jsonld-commande.read"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Commande resource.",
        "description": "Creates a Commande resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Commande resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Commande.jsonld-commande.write"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/commandes/{id}": {
      "get": {
        "operationId": "api_commandes_id_get",
        "tags": ["Commande"],
        "responses": {
          "200": {
            "description": "Commande resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Commande.jsonld-commande.read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Commande resource.",
        "description": "Retrieves a Commande resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Commande identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_commandes_id_delete",
        "tags": ["Commande"],
        "responses": {
          "204": {
            "description": "Commande resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Commande resource.",
        "description": "Removes the Commande resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Commande identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_commandes_id_patch",
        "tags": ["Commande"],
        "responses": {
          "200": {
            "description": "Commande resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Commande.jsonld-commande.read"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Commande resource.",
        "description": "Updates the Commande resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Commande identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Commande resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Commande-commande.write"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/currentuser": {
      "get": {
        "operationId": "app_current_user",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "User collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User.jsonld-user.read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": ["string", "null"]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["hydra:member"]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of User resources.",
        "description": "Retrieves the collection of User resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/api/employee/items": {
      "get": {
        "operationId": "app_get_employee_items",
        "tags": ["Employee"],
        "responses": {
          "200": {
            "description": "Employee collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Employee.jsonld-employee.read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": ["string", "null"]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["hydra:member"]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Employee resources.",
        "description": "Retrieves the collection of Employee resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/api/employees": {
      "get": {
        "operationId": "api_employees_get_collection",
        "tags": ["Employee"],
        "responses": {
          "200": {
            "description": "Employee collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Employee.jsonld-employee.read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": ["string", "null"]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["hydra:member"]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Employee resources.",
        "description": "Retrieves the collection of Employee resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_employees_post",
        "tags": ["Employee"],
        "responses": {
          "201": {
            "description": "Employee resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee.jsonld-employee.read"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Employee resource.",
        "description": "Creates a Employee resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Employee resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Employee.jsonld-employee.write"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/employees/{id}": {
      "get": {
        "operationId": "api_employees_id_get",
        "tags": ["Employee"],
        "responses": {
          "200": {
            "description": "Employee resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee.jsonld-employee.read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Employee resource.",
        "description": "Retrieves a Employee resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Employee identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_employees_id_delete",
        "tags": ["Employee"],
        "responses": {
          "204": {
            "description": "Employee resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Employee resource.",
        "description": "Removes the Employee resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Employee identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_employees_id_patch",
        "tags": ["Employee"],
        "responses": {
          "200": {
            "description": "Employee resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee.jsonld-employee.read"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Employee resource.",
        "description": "Updates the Employee resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Employee identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Employee resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Employee-employee.write"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/item_statuses": {
      "get": {
        "operationId": "api_item_statuses_get_collection",
        "tags": ["ItemStatus"],
        "responses": {
          "200": {
            "description": "ItemStatus collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ItemStatus.jsonld-itemStatus.read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": ["string", "null"]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["hydra:member"]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of ItemStatus resources.",
        "description": "Retrieves the collection of ItemStatus resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_item_statuses_post",
        "tags": ["ItemStatus"],
        "responses": {
          "201": {
            "description": "ItemStatus resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemStatus.jsonld-itemStatus.read"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a ItemStatus resource.",
        "description": "Creates a ItemStatus resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new ItemStatus resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemStatus.jsonld-itemStatus.write"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/item_statuses/{id}": {
      "get": {
        "operationId": "api_item_statuses_id_get",
        "tags": ["ItemStatus"],
        "responses": {
          "200": {
            "description": "ItemStatus resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemStatus.jsonld-itemStatus.read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a ItemStatus resource.",
        "description": "Retrieves a ItemStatus resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ItemStatus identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_item_statuses_id_delete",
        "tags": ["ItemStatus"],
        "responses": {
          "204": {
            "description": "ItemStatus resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the ItemStatus resource.",
        "description": "Removes the ItemStatus resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ItemStatus identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_item_statuses_id_patch",
        "tags": ["ItemStatus"],
        "responses": {
          "200": {
            "description": "ItemStatus resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemStatus.jsonld-itemStatus.read"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the ItemStatus resource.",
        "description": "Updates the ItemStatus resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ItemStatus identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated ItemStatus resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ItemStatus-itemStatus.write"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/items": {
      "get": {
        "operationId": "api_items_get_collection",
        "tags": ["Item"],
        "responses": {
          "200": {
            "description": "Item collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Item.jsonld-item.read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": ["string", "null"]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["hydra:member"]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Item resources.",
        "description": "Retrieves the collection of Item resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_items_post",
        "tags": ["Item"],
        "responses": {
          "201": {
            "description": "Item resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Item.jsonld-item.read"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Item resource.",
        "description": "Creates a Item resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Item resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Item.jsonld-item.write"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/items/{id}": {
      "get": {
        "operationId": "api_items_id_get",
        "tags": ["Item"],
        "responses": {
          "200": {
            "description": "Item resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Item.jsonld-item.read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Item resource.",
        "description": "Retrieves a Item resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Item identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_items_id_delete",
        "tags": ["Item"],
        "responses": {
          "204": {
            "description": "Item resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Item resource.",
        "description": "Removes the Item resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Item identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_items_id_patch",
        "tags": ["Item"],
        "responses": {
          "200": {
            "description": "Item resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Item.jsonld-item.read"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Item resource.",
        "description": "Updates the Item resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Item identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Item resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Item-item.write"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/items/{id}/complete": {
      "get": {
        "operationId": "app_items_complete",
        "tags": ["Item"],
        "responses": {
          "200": {
            "description": "Item collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Item.jsonld-item.read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": ["string", "null"]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["hydra:member"]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Item resources.",
        "description": "Retrieves the collection of Item resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/api/login_check": {
      "post": {
        "operationId": "login_check_post",
        "tags": ["Login Check"],
        "responses": {
          "200": {
            "description": "User token created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "readOnly": true,
                      "type": "string",
                      "nullable": false
                    }
                  },
                  "required": ["token"]
                }
              }
            }
          }
        },
        "summary": "Creates a user token.",
        "description": "Creates a user token.",
        "requestBody": {
          "description": "The login data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "nullable": false
                  },
                  "password": {
                    "type": "string",
                    "nullable": false
                  }
                },
                "required": ["username", "password"]
              }
            }
          },
          "required": true
        }
      },
      "parameters": []
    },
    "/api/services": {
      "get": {
        "operationId": "api_services_get_collection",
        "tags": ["Service"],
        "responses": {
          "200": {
            "description": "Service collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Service.jsonld-service.read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": ["string", "null"]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["hydra:member"]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Service resources.",
        "description": "Retrieves the collection of Service resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_services_post",
        "tags": ["Service"],
        "responses": {
          "201": {
            "description": "Service resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Service.jsonld-service.read"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Service resource.",
        "description": "Creates a Service resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Service resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Service.jsonld-service.write"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/services/{id}": {
      "get": {
        "operationId": "api_services_id_get",
        "tags": ["Service"],
        "responses": {
          "200": {
            "description": "Service resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Service.jsonld-service.read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Service resource.",
        "description": "Retrieves a Service resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Service identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_services_id_delete",
        "tags": ["Service"],
        "responses": {
          "204": {
            "description": "Service resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Service resource.",
        "description": "Removes the Service resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Service identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_services_id_patch",
        "tags": ["Service"],
        "responses": {
          "200": {
            "description": "Service resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Service.jsonld-service.read"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Service resource.",
        "description": "Updates the Service resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Service identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Service resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Service-service.write"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/users": {
      "get": {
        "operationId": "api_users_get_collection",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "User collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User.jsonld-user.read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": ["string", "null"]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["hydra:member"]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of User resources.",
        "description": "Retrieves the collection of User resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_users_post",
        "tags": ["User"],
        "responses": {
          "201": {
            "description": "User resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User.jsonld-user.read"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a User resource.",
        "description": "Creates a User resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new User resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/User.jsonld-user.write"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "api_users_id_get",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "User resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User.jsonld-user.read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a User resource.",
        "description": "Retrieves a User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_users_id_delete",
        "tags": ["User"],
        "responses": {
          "204": {
            "description": "User resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the User resource.",
        "description": "Removes the User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_users_id_patch",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "User resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User.jsonld-user.read"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the User resource.",
        "description": "Updates the User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated User resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/User-user.write"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/commandes/noassign": {
      "get": {
        "operationId": "app_get_commandes_no_assign",
        "tags": ["Commande"],
        "responses": {
          "200": {
            "description": "Commande collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Commande.jsonld-commande.read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": ["string", "null"]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["hydra:member"]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Commande resources.",
        "description": "Retrieves the collection of Commande resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "Category-category.write": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "parent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Category-category.write"
              },
              {
                "type": "null"
              }
            ]
          },
          "subcategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category-category.write"
            }
          }
        }
      },
      "Category.jsonld-category.list.read": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": ["http://www.w3.org/ns/hydra/core#"]
                  }
                },
                "required": ["@vocab", "hydra"],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "parent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Category.jsonld-category.list.read"
              },
              {
                "type": "null"
              }
            ]
          },
          "subcategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category.jsonld-category.list.read"
            }
          }
        }
      },
      "Category.jsonld-category.write": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "parent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Category.jsonld-category.write"
              },
              {
                "type": "null"
              }
            ]
          },
          "subcategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category.jsonld-category.write"
            }
          }
        }
      },
      "Client-client.write": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "clientNumber": {
            "type": "string"
          },
          "Premium": {
            "type": ["boolean", "null"]
          },
          "commande": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "mobilephone": {
            "type": ["string", "null"]
          },
          "phone": {
            "type": ["string", "null"]
          },
          "dateborn": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "numadrs": {
            "type": "integer"
          },
          "adrs": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "Client.jsonld-client.read": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": ["http://www.w3.org/ns/hydra/core#"]
                  }
                },
                "required": ["@vocab", "hydra"],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "clientNumber": {
            "type": "string"
          },
          "Premium": {
            "type": ["boolean", "null"]
          },
          "commande": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Commande.jsonld-client.read"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "mobilephone": {
            "type": ["string", "null"]
          },
          "phone": {
            "type": ["string", "null"]
          },
          "dateborn": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "numadrs": {
            "type": "integer"
          },
          "adrs": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "Client.jsonld-client.write": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "clientNumber": {
            "type": "string"
          },
          "Premium": {
            "type": ["boolean", "null"]
          },
          "commande": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "mobilephone": {
            "type": ["string", "null"]
          },
          "phone": {
            "type": ["string", "null"]
          },
          "dateborn": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "numadrs": {
            "type": "integer"
          },
          "adrs": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "Commande-commande.write": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "ref": {
            "type": "string"
          },
          "filingDate": {
            "type": "string",
            "format": "date-time"
          },
          "returnDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Commande.jsonld-client.read": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": ["http://www.w3.org/ns/hydra/core#"]
                  }
                },
                "required": ["@vocab", "hydra"],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "ref": {
            "type": "string"
          },
          "filingDate": {
            "type": "string",
            "format": "date-time"
          },
          "returnDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Commande.jsonld-commande.read": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": ["http://www.w3.org/ns/hydra/core#"]
                  }
                },
                "required": ["@vocab", "hydra"],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "ref": {
            "type": "string"
          },
          "filingDate": {
            "type": "string",
            "format": "date-time"
          },
          "returnDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "client": {
            "type": ["string", "null"],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        }
      },
      "Commande.jsonld-commande.write": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "ref": {
            "type": "string"
          },
          "filingDate": {
            "type": "string",
            "format": "date-time"
          },
          "returnDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Employee-employee.write": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "empNumber": {
            "type": ["string", "null"]
          },
          "items": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "mobilephone": {
            "type": ["string", "null"]
          },
          "phone": {
            "type": ["string", "null"]
          },
          "dateborn": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "numadrs": {
            "type": "integer"
          },
          "adrs": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "Employee.jsonld-employee.read": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": ["http://www.w3.org/ns/hydra/core#"]
                  }
                },
                "required": ["@vocab", "hydra"],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "empNumber": {
            "type": ["string", "null"]
          },
          "items": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "mobilephone": {
            "type": ["string", "null"]
          },
          "phone": {
            "type": ["string", "null"]
          },
          "dateborn": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "numadrs": {
            "type": "integer"
          },
          "adrs": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "Employee.jsonld-employee.write": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "empNumber": {
            "type": ["string", "null"]
          },
          "items": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "mobilephone": {
            "type": ["string", "null"]
          },
          "phone": {
            "type": ["string", "null"]
          },
          "dateborn": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "numadrs": {
            "type": "integer"
          },
          "adrs": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "Item-item.write": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "service": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "commande": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "ItemStatus": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "detailItem": {
            "type": ["string", "null"]
          },
          "price": {
            "type": "number"
          }
        }
      },
      "Item.jsonld-item.read": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": ["http://www.w3.org/ns/hydra/core#"]
                  }
                },
                "required": ["@vocab", "hydra"],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "service": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "commande": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "ItemStatus": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "detailItem": {
            "type": ["string", "null"]
          },
          "price": {
            "type": "number"
          },
          "Quantity": {
            "type": "integer"
          },
          "employee": {
            "type": ["string", "null"],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        }
      },
      "Item.jsonld-item.write": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "service": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "commande": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "ItemStatus": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "detailItem": {
            "type": ["string", "null"]
          },
          "price": {
            "type": "number"
          }
        }
      },
      "ItemStatus-itemStatus.write": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "ItemStatus.jsonld-itemStatus.read": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": ["http://www.w3.org/ns/hydra/core#"]
                  }
                },
                "required": ["@vocab", "hydra"],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ItemStatus.jsonld-itemStatus.write": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Service-service.write": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "description": {
            "type": ["string", "null"]
          },
          "image": {
            "type": ["string", "null"]
          }
        },
        "required": ["name", "price"]
      },
      "Service.jsonld-service.read": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": ["http://www.w3.org/ns/hydra/core#"]
                  }
                },
                "required": ["@vocab", "hydra"],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "description": {
            "type": ["string", "null"]
          },
          "image": {
            "type": ["string", "null"]
          }
        },
        "required": ["name", "price"]
      },
      "Service.jsonld-service.write": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "description": {
            "type": ["string", "null"]
          },
          "image": {
            "type": ["string", "null"]
          }
        },
        "required": ["name", "price"]
      },
      "User-user.write": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "roles": {
            "description": "The user roles",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "mobilephone": {
            "type": ["string", "null"]
          },
          "phone": {
            "type": ["string", "null"]
          },
          "dateborn": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "numadrs": {
            "type": "integer"
          },
          "adrs": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "User.jsonld-user.read": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": ["http://www.w3.org/ns/hydra/core#"]
                  }
                },
                "required": ["@vocab", "hydra"],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "roles": {
            "description": "The user roles",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "mobilephone": {
            "type": ["string", "null"]
          },
          "phone": {
            "type": ["string", "null"]
          },
          "dateborn": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "numadrs": {
            "type": "integer"
          },
          "adrs": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "User.jsonld-user.write": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "roles": {
            "description": "The user roles",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "mobilephone": {
            "type": ["string", "null"]
          },
          "phone": {
            "type": ["string", "null"]
          },
          "dateborn": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "numadrs": {
            "type": "integer"
          },
          "adrs": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "JWT": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [],
  "tags": [],
  "webhooks": {}
}
