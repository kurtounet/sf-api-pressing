# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  app.admin_email: "pressingprestige@gmail.com"
  app.currency: "eur"    
  app.secretStripe: '%env(STRIPE_SECRET_KEY)%'
  dir.services.images: /uploads/images/services
  dir.categories.images: /uploads/images/categories

services: 

  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
  App\Services\EmailNotificationService:
    arguments:
      $adminEmail: '%app.admin_email%'   

  # Listener Doctrine pour réagir après la persistance d'une entité Client
  App\EventListener\UserPersistListener:
    tags:
      - { name: 'doctrine.event_listener', event: 'postPersist' }
  
  # Listener Symfony pour écouter l'événement 'user.registered'
  App\EventListener\UserRegisteredListener:
    public: true
    tags:
      - { name: 'kernel.event_listener', event: 'user.registered', method: 'onUserRegistered' }

  

  